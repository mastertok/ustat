# Generated by Django 5.1.5 on 2025-01-19 07:20

import ckeditor.fields
import courses.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='courses.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='URL')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
                ('excerpt', models.TextField(max_length=300, verbose_name='Краткое описание')),
                ('cover_image', models.ImageField(help_text='Рекомендуемый размер: 700x430px. Максимальный размер: 2MB', upload_to='courses/covers/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif']), courses.models.validate_image_size], verbose_name='Обложка')),
                ('video_intro', models.URLField(blank=True, help_text='Поддерживаются ссылки с YouTube и Vimeo', null=True, validators=[courses.models.validate_video_url], verbose_name='Вводное видео')),
                ('max_students', models.PositiveIntegerField(default=0, help_text='0 - без ограничений', verbose_name='Максимальное количество студентов')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Начальный'), ('intermediate', 'Средний'), ('advanced', 'Продвинутый')], default='beginner', max_length=20, verbose_name='Уровень сложности')),
                ('language', models.CharField(choices=[('ru', 'Русский'), ('en', 'Английский'), ('ky', 'Кыргызский')], default='ru', max_length=2, verbose_name='Язык курса')),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Продолжительность (в минутах)')),
                ('enable_qa', models.BooleanField(default=True, verbose_name='Включить вопросы и ответы')),
                ('enable_announcements', models.BooleanField(default=True, verbose_name='Включить анонсы')),
                ('enable_reviews', models.BooleanField(default=True, verbose_name='Включить отзывы')),
                ('course_type', models.CharField(choices=[('free', 'Бесплатный'), ('paid', 'Платный'), ('public', 'Публичный')], default='paid', max_length=10, verbose_name='Тип курса')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена')),
                ('currency', models.CharField(default='KGS', max_length=3, verbose_name='Валюта')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена со скидкой')),
                ('sales_count', models.PositiveIntegerField(default=0, verbose_name='Количество продаж')),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Средний рейтинг')),
                ('reviews_count', models.PositiveIntegerField(default=0, verbose_name='Количество отзывов')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('review', 'На проверке'), ('published', 'Опубликован')], default='draft', max_length=20, verbose_name='Статус')),
                ('seo_title', models.CharField(blank=True, max_length=200, verbose_name='SEO заголовок')),
                ('seo_description', models.TextField(blank=True, verbose_name='SEO описание')),
                ('seo_keywords', models.CharField(blank=True, max_length=500, verbose_name='SEO ключевые слова')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата обновления')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.category', verbose_name='Категория')),
                ('producer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.producerprofile', verbose_name='Продюсер')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.teacherprofile', verbose_name='Преподаватель')),
                ('tags', models.ManyToManyField(blank=True, to='courses.tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Содержание')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата обновления')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='courses.course')),
            ],
            options={
                'verbose_name': 'Объявление',
                'verbose_name_plural': 'Объявления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('cart_adds_count', models.PositiveIntegerField(default=0, verbose_name='Добавлено в корзину')),
                ('purchases_count', models.PositiveIntegerField(default=0, verbose_name='Количество покупок')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
            ],
            options={
                'verbose_name': 'Аналитика курса',
                'verbose_name_plural': 'Аналитика курсов',
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('subject', models.CharField(max_length=200, verbose_name='Тема письма')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Отправлено')),
                ('recipients_count', models.PositiveIntegerField(default=0, verbose_name='Количество получателей')),
                ('opens_count', models.PositiveIntegerField(default=0, verbose_name='Количество открытий')),
                ('clicks_count', models.PositiveIntegerField(default=0, verbose_name='Количество кликов')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('courses', models.ManyToManyField(related_name='email_campaigns', to='courses.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.producerprofile')),
            ],
            options={
                'verbose_name': 'Email кампания',
                'verbose_name_plural': 'Email кампании',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модули',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('content_type', models.CharField(choices=[('video', 'Видео'), ('text', 'Текст'), ('test', 'Тест'), ('presentation', 'Презентация')], max_length=20, verbose_name='Тип контента')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Содержание')),
                ('video_url', models.URLField(blank=True, null=True, validators=[courses.models.validate_video_url], verbose_name='URL видео')),
                ('file', models.FileField(blank=True, null=True, upload_to='courses/lessons/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'ppt', 'pptx'])], verbose_name='Файл')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Продолжительность (в минутах)')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.module')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код')),
                ('discount_percent', models.PositiveIntegerField(verbose_name='Процент скидки')),
                ('valid_from', models.DateTimeField(verbose_name='Действует с')),
                ('valid_until', models.DateTimeField(verbose_name='Действует до')),
                ('max_uses', models.PositiveIntegerField(verbose_name='Максимальное количество использований')),
                ('used_count', models.PositiveIntegerField(default=0, verbose_name='Использовано раз')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('courses', models.ManyToManyField(related_name='promocodes', to='courses.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.producerprofile')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('discount_percent', models.PositiveIntegerField(verbose_name='Процент скидки')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('courses', models.ManyToManyField(related_name='promotions', to='courses.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.producerprofile')),
            ],
            options={
                'verbose_name': 'Акция',
                'verbose_name_plural': 'Акции',
            },
        ),
        migrations.CreateModel(
            name='TrafficSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=100, verbose_name='Источник')),
                ('utm_campaign', models.CharField(blank=True, max_length=100, verbose_name='UTM кампания')),
                ('utm_content', models.CharField(blank=True, max_length=100, verbose_name='UTM контент')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('conversion_count', models.PositiveIntegerField(default=0, verbose_name='Количество конверсий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
            ],
            options={
                'verbose_name': 'Источник трафика',
                'verbose_name_plural': 'Источники трафика',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата зачисления')),
                ('status', models.CharField(choices=[('active', 'Активный'), ('completed', 'Завершен'), ('dropped', 'Отчислен')], default='active', max_length=20, verbose_name='Статус')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('progress', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Прогресс (%)')),
                ('last_accessed', models.DateTimeField(blank=True, null=True, verbose_name='Последний доступ')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Зачисление',
                'verbose_name_plural': 'Зачисления',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('text', models.TextField(verbose_name='Отзыв')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата обновления')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'unique_together': {('course', 'user')},
            },
        ),
    ]
